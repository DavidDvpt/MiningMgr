<UserControl x:Class="WpfApp.Views.ManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dps="clr-namespace:WpfApp.DependencyProperties"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!-- Affichage ou non des colonnes du datagrid et des stackpanel du formulaire -->
        <!-- Commun -->
        <dps:DataGridColumnVisibilityBinding x:Key="idVis" Data="{Binding IdVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="nomVis" Data="{Binding NomVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="isActiveVis" Data="{Binding IsActiveVisibility}"/>
        <!-- Modele -->
        <dps:DataGridColumnVisibilityBinding x:Key="categorieNomVis" Data="{Binding CategorieNomVisibility}"/>
        <!-- InWorld -->
        <dps:DataGridColumnVisibilityBinding x:Key="modeleNomVis" Data="{Binding ModeleNomVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="valueVis" Data="{Binding ValueVisibility}"/>
        <!-- Unstackable-->
        <dps:DataGridColumnVisibilityBinding x:Key="isLimitedVis" Data="{Binding IsLimitedVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="decayVis" Data="{Binding DecayVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="codeVis" Data="{Binding CodeVisibility}"/>
        <!-- Tool -->
        <dps:DataGridColumnVisibilityBinding x:Key="usePerMinVis" Data="{Binding UsePerMinVisibility}"/>
        <!-- Finder -->
        <dps:DataGridColumnVisibilityBinding x:Key="depthVis" Data="{Binding DepthVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="rangeVis" Data="{Binding RangeVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="basePecSearchVis" Data="{Binding BasePecSearchVisibility}"/>
        <!-- Excavator -->
        <dps:DataGridColumnVisibilityBinding x:Key="efficientyVis" Data="{Binding EfficientyVisibility}"/>
        
        <!-- Finder Amplifier -->
        <dps:DataGridColumnVisibilityBinding x:Key="coefficientVis" Data="{Binding CoefficientVisibility}"/>
        
        <!-- Enhancers -->
        <dps:DataGridColumnVisibilityBinding x:Key="bonusValue1Vis" Data="{Binding BonusValue1Visibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="bonusValue2Vis" Data="{Binding BonusValue2Visibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="slotVis" Data="{Binding SlotVisibility}"/>
        
        <!-- SearchMode -->
        <dps:DataGridColumnVisibilityBinding x:Key="abbrevVis" Data="{Binding AbbrevVisibility}"/>
        
        <!-- Setup -->
        <dps:DataGridColumnVisibilityBinding x:Key="multiplicateurVis" Data="{Binding MultiplicateurVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="searchModeVis" Data="{Binding SearchModeVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="finderVis" Data="{Binding FinderVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="finderAmplifierVis" Data="{Binding FinderAmplifierVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="depthEnhancerQtyVis" Data="{Binding DepthEnhancerQtyVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="rangeEnhancerQtyVis" Data="{Binding RangeEnhancerQtyVisibility}"/>
        <dps:DataGridColumnVisibilityBinding x:Key="skillEnhancerQtyVis" Data="{Binding SkillEnhancerQtyVisibility}"/>

        <dps:DataGridColumnVisibilityBinding x:Key="cbxModelesChoiceEnabled" Data="{Binding CbxModelesChoiceVisibility}"/>

        <Style TargetType="StackPanel">
            <Setter Property="Background" Value="LightGray"/>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="LightGray"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- DATAGRID + bouttons modifier et creer -->       
        <DockPanel>
            <!-- BOUTONS -->
            <!-- COMBOBOX DE SELECTION DU TYPE DE MATERIAL -->
            <StackPanel Name="spModeles" Orientation="Horizontal" DockPanel.Dock="Top" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource cbxModelesChoiceEnabled}}">
                <Label Name="lbModeles" Content="Modèles : " Width="100"/>
                <ComboBox Name="cbxModeles" ItemsSource="{Binding Modeles}"
                              DisplayMemberPath="Nom"
                              SelectedItem="{Binding SelectedModele}" Width="150"/>
            </StackPanel>
            
            <Grid DockPanel.Dock="Bottom" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Name="btnUpdate" Content="Modifier" Command="{Binding UpdateCommand}" />
                <Button Name="btnCreate" Content="Créer" Grid.Column="1" Command="{Binding CreateCommand}"/>
            </Grid>
            
            <!-- DATAGRID-->
            <DataGrid Name="dgGeneric" 
                      ItemsSource="{Binding DataGridItemSource, Mode=TwoWay}"
                      AutoGenerateColumns="False"
                      SelectedItem="{Binding DgSelectedItem, Mode=TwoWay}"
                      Margin="5,3"
                      IsReadOnly="True">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource idVis}}"/>
                    <DataGridTextColumn Header="Nom" Binding="{Binding Nom}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource nomVis}}"/>
                    <DataGridTextColumn Header="Categorie" Binding="{Binding Categorie.Nom}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource categorieNomVis}}"/>
                    <DataGridTextColumn Header="Modele" Binding="{Binding Modele.Nom}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource modeleNomVis}}"/>
                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource valueVis}}"/>
                    <DataGridCheckBoxColumn Header="Limited" Binding="{Binding IsLimited}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource isLimitedVis}}"/>
                    <DataGridTextColumn Header="Decay" Binding="{Binding Decay}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource decayVis}}"/>
                    <DataGridTextColumn Header="Slot" Binding="{Binding Slot}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource slotVis}}"/>
                    <DataGridTextColumn Header="BonusValue1" Binding="{Binding BonusValue1}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource bonusValue1Vis}}"/>
                    <DataGridTextColumn Header="BonusValue2" Binding="{Binding BonusValue2}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource bonusValue2Vis}}"/>
                    <DataGridTextColumn Header="Depth" Binding="{Binding Depth}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource depthVis}}"/>
                    <DataGridTextColumn Header="Code" Binding="{Binding Code}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource codeVis}}"/>
                    <DataGridTextColumn Header="Range" Binding="{Binding Range}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource rangeVis}}"/>
                    <DataGridTextColumn Header="BasePecSearch" Binding="{Binding BasePecSearch}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource basePecSearchVis}}"/>
                    <DataGridTextColumn Header="UsePerMin" Binding="{Binding UsePerMin}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource usePerMinVis}}"/>
                    <DataGridTextColumn Header="Coefficient" Binding="{Binding Coefficient}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource coefficientVis}}"/>
                    <DataGridTextColumn Header="Efficienty" Binding="{Binding Efficienty}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource efficientyVis}}"/>
                    <DataGridTextColumn Header="Abbrev" Binding="{Binding Abbrev}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource abbrevVis}}"/>
                    <DataGridTextColumn Header="Multiplicateur" Binding="{Binding Multiplicateur}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource multiplicateurVis}}"/>
                    <DataGridTextColumn Header="SearchMode" Binding="{Binding SearchMode.Nom}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource searchModeVis}}"/>
                    <DataGridTextColumn Header="Finder" Binding="{Binding Finder.Nom}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource finderVis}}"/>
                    <DataGridTextColumn Header="Finder Amplifier" Binding="{Binding FinderAmplifier.Nom}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource finderAmplifierVis}}"/>
                    <DataGridTextColumn Header="Depth Enhancer Quantity" Binding="{Binding DepthEnhancerQty}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource depthEnhancerQtyVis}}"/>
                    <DataGridTextColumn Header="Range Enhancer Quantity" Binding="{Binding RangeEnhancerQty}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource rangeEnhancerQtyVis}}"/>
                    <DataGridTextColumn Header="Skill Enhancer Quantity" Binding="{Binding SkillEnhancerQty}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource skillEnhancerQtyVis}}"/>
                    <DataGridCheckBoxColumn Header="Actif" Binding="{Binding IsActive}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource isActiveVis}}"/>

                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        
        <!--FORMULAIRE-->
        <DockPanel Grid.Column="2">
            <DockPanel.Resources>

            </DockPanel.Resources>
            <!-- BOUTONS -->
            <Grid DockPanel.Dock="Bottom" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Name="btnValider" Content="Sauver" Command="{Binding SubmitCommand}"/>
                <Button Name="btnAnnuler" Grid.Column="1" Content="Annuler" Command="{Binding CancelCommand}"/>
            </Grid>
            
            <!-- FORMULAIRE -->
            <StackPanel Name="spEntity"  Height="auto" Orientation="Vertical">
                
                <StackPanel.Resources>
                    <Style x:Key="spBlocControl" TargetType="StackPanel">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Orientation" Value="Horizontal"/>
                    </Style>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0,0,5,0"/>
                        <Setter Property="Width" Value="100"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5,0"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="5,0,0,0"/>
                        <Setter Property="Foreground" Value="Red"/>
                    </Style>
                    <Style x:Key="txtbkTitre" TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </StackPanel.Resources>
                
                <!-- INFOS GENERALES -->
                <StackPanel Orientation="Vertical">
                    <!-- NOM -->
                    <StackPanel Name="spNom" Style="{StaticResource spBlocControl}"
                                Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource nomVis}}">
                        <Label Name="lbNom" Content="Nom : "/>
                        <TextBox Name="tbxNom" Text="{Binding ItemForm.Nom, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                 Width="220" IsEnabled="{Binding NomFormEnabled}" Validation.Error="Validation_Error"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxNom}"/>
                    </StackPanel>
                    <!-- CODE -->
                    <StackPanel Name="spCode" Style="{StaticResource spBlocControl}" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource codeVis}}">
                        <Label Name="lbCode" Content="Code : "/>
                        <TextBox Name="tbxCode" Text="{Binding ItemForm.Code, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="100"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxCode}"/>
                    </StackPanel>
                    <!-- ABBREV -->
                    <StackPanel Name="spAbbrev" Style="{StaticResource spBlocControl}"
                                Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource abbrevVis}}">
                        <Label Name="lbAbbrev" Content="Abbrev : "/>
                        <TextBox Name="tbxAbbrev" Text="{Binding ItemForm.Abbrev, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="50"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxAbbrev}"/>
                    </StackPanel>
                    
                </StackPanel>

                <!-- CHECKBOX -->
                <StackPanel Style="{StaticResource spBlocControl}"
                            Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource isActiveVis}}">

                    <CheckBox Name="ckxIsActive" IsChecked="{Binding ItemForm.IsActive, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="100" Content="Actif"/>
                    <CheckBox Name="ckxLimited" IsChecked="{Binding ItemForm.IsLimited, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="100" Content="Limited" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource isLimitedVis}}"/>
                
                </StackPanel>
                
                <!-- MODELE -->
                <StackPanel Name="spCategorie" Style="{StaticResource spBlocControl}"
                            Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource categorieNomVis}}">
                    
                    <Label Name="lbCategorie" Content="Catégorie : "/>
                    <ComboBox Name="cbxCategorie" ItemsSource="{Binding Categories}" DisplayMemberPath="Nom" VerticalContentAlignment="Center"
                              SelectedItem="{Binding ItemForm.Categorie}" Width="100"/>
                
                </StackPanel>

                <!-- InWorld -->
                <StackPanel Name="spModele" Style="{StaticResource spBlocControl}"
                            Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource modeleNomVis}}">

                    <Label Name="lbModele" Content="Modèle : "/>
                    <ComboBox Name="cbxModele" ItemsSource="{Binding Modeles}" DisplayMemberPath="Nom" VerticalContentAlignment="Center"
                              SelectedItem="{Binding ItemForm.Modele}" Width="100"
                              IsEnabled="{Binding ModeleEnabled}"/>

                </StackPanel>

                <!-- ECONOMIE -->
                <StackPanel Orientation="Vertical"
                            Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource valueVis}}">
                    <TextBlock Text="Informations économiques" Style="{StaticResource txtbkTitre}" />
                    
                    <!-- VALUE -->
                    <StackPanel Name="spValue" Style="{StaticResource spBlocControl}">
                        <Label Name="lbValue" Content="Valeur (Ped) :"/>
                        <TextBox Name="tbxValue" Text="{Binding ItemForm.Value, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxValue}"/>
                    </StackPanel>
                        
                    <!-- DECAY -->
                    <StackPanel Name="spDecay" Style="{StaticResource spBlocControl}"
                                Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource decayVis}}">
                        <Label Name="lbDecay" Content="Decay (Pec) :"/>
                        <TextBox Name="tbxDecay" Text="{Binding ItemForm.Decay, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxDecay}"/>
                    </StackPanel>
                        
                    <!-- USE PER MIN -->
                    <StackPanel Name="spUsePerMin" Style="{StaticResource spBlocControl}"
                                Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource usePerMinVis}}">
                        <Label Name="lbUsePerMin" Content="Use per Minute : "/>
                        <TextBox Name="tbxUsePerMin" Text="{Binding ItemForm.UsePerMin, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxUsePerMin}"/>
                    </StackPanel>
                    
                </StackPanel>
              
                <!-- INFOS SPECIFIQUES -->
                <StackPanel>
                    <TextBlock Text="Informations spécifiques"  Style="{StaticResource txtbkTitre}"
                               Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource valueVis}}"/>
                    <!-- FINDER -->
                    <StackPanel Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource depthVis}}">
                        
                        <!-- DEPTH -->
                        <StackPanel Name="spDepth" Style="{StaticResource spBlocControl}">
                            <Label Name="lbDepth" Content="Depth (m) :"/>
                            <TextBox Name="tbxDepth" Text="{Binding ItemForm.Depth, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxDepth}"/>
                        </StackPanel>
                        
                        <!-- RANGE -->
                        <StackPanel Name="spRange" Style="{StaticResource spBlocControl}">
                            <Label Name="lbRange" Content="Range (m) :"/>
                            <TextBox Name="tbxRange" Text="{Binding ItemForm.Range, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxRange}"/>
                        </StackPanel>
                        
                        <!-- BASE PEC SEARCH -->
                        <StackPanel Name="spBasePecSearch" Style="{StaticResource spBlocControl}">
                            <Label Name="lbBasePecSearch" Content="Base Probe (Pec) :"/>
                            <TextBox Name="tbxBasePecSearch" Text="{Binding ItemForm.BasePecSearch, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxBasePecSearch}"/>
                        </StackPanel>
                    
                    </StackPanel>

                    <!-- EXCAVATOR -->
                    <StackPanel Name="spEfficienty" Style="{StaticResource spBlocControl}"
                                Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource efficientyVis}}">
                        <Label Name="lbEfficienty" Content="Efficienty :"/>
                        <TextBox Name="tbxEfficienty" Text="{Binding ItemForm.Efficienty, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxEfficienty}"/>
                    </StackPanel>

                    <!-- FINDER AMPLIFIER -->
                    <StackPanel Name="spCoefficient" Style="{StaticResource spBlocControl}"
                                Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource coefficientVis}}">
                        <Label Name="lbCoefficient" Content="Coefficient :"/>
                        <TextBox Name="tbxCoefficient" Text="{Binding ItemForm.Coefficient, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                        <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxCoefficient}"/>
                    </StackPanel>

                    <!-- ENHANCER -->
                    <StackPanel Orientation="Vertical" Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource slotVis}}">
                        
                        <!-- SLOT -->
                        <StackPanel Name="spSlot" Style="{StaticResource spBlocControl}">
                            <Label Name="lbSlot" Content="Slot :"/>
                            <TextBox Name="tbxSlot" Text="{Binding ItemForm.Slot, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxSlot}"/>
                        </StackPanel>
                        
                        <!-- BONUS VALUE 1 -->
                        <StackPanel Name="spBonusValue1" Style="{StaticResource spBlocControl}">
                            <Label Name="lbBonusValue1" Content="Bonus Value 1 :"/>
                            <TextBox Name="tbxBonusValue1" Text="{Binding ItemForm.BonusValue1, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxBonusValue1}"/>
                        </StackPanel>
                        
                        <!-- BONUS VALUE 2 -->
                        <StackPanel Name="spBonusValue2" Style="{StaticResource spBlocControl}">
                            <Label Name="lbBonusValue2" Content="Bonus Value 2 :"/>
                            <TextBox Name="tbxBonusValue2" Text="{Binding ItemForm.BonusValue2, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxBonusValue2}"/>
                        </StackPanel>
                    
                    </StackPanel>
                    
                    <!-- SETUP -->
                    <StackPanel Visibility="{Binding .Data, Converter={StaticResource boolToVis}, Source={StaticResource searchModeVis}}">

                        <!-- SEARCH MODE -->
                        <StackPanel Name="spSearchMode" Style="{StaticResource spBlocControl}">
                            <Label Name="lbSearchMode" Content="Search mode :"/>
                            <ComboBox Name="cbxSearchMode" ItemsSource="{Binding SearchModes}" VerticalContentAlignment="Center"
                              DisplayMemberPath="Nom"
                              SelectedItem="{Binding ItemForm.SearchMode}" Width="200"/>
                        </StackPanel>

                        <!-- FINDER -->
                        <StackPanel Name="spFinder" Style="{StaticResource spBlocControl}">
                            <Label Name="lbFinder" Content="Finder :"/>
                            <ComboBox Name="cbxFinder" ItemsSource="{Binding Finders}" VerticalContentAlignment="Center"
                              DisplayMemberPath="Nom"
                              SelectedItem="{Binding ItemForm.Finder}" Width="200"/>
                        </StackPanel>

                        <!-- FINDER AMPLIFIER -->
                        <StackPanel Name="spFinderAmplifier" Style="{StaticResource spBlocControl}">
                            <Label Name="lbFinderAmplifier" Content="Finder Amplifier :"/>
                            <ComboBox Name="cbxFinderAmplifier" ItemsSource="{Binding FinderAmplifiers}" VerticalContentAlignment="Center"
                              DisplayMemberPath="Nom"
                              SelectedItem="{Binding ItemForm.FinderAmplifier}" Width="200"/>
                        </StackPanel>

                        <!-- DEPTH ENHANCER QTY -->
                        <StackPanel Name="spDepthEnancerQty" Style="{StaticResource spBlocControl}">
                            <Label Name="lbDepthEnancerQty" Content="Depth Enhancer Qty :"/>
                            <TextBox Name="tbxDepthEnancerQty" Text="{Binding ItemForm.DepthEnhancerQty, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxDepthEnancerQty}"/>
                        </StackPanel>

                        <!-- RANGE ENHANCER QTY -->
                        <StackPanel Name="spRangeEnancerQty" Style="{StaticResource spBlocControl}">
                            <Label Name="lbRangeEnancerQty" Content="Range Enhancer Qty :"/>
                            <TextBox Name="tbxRangeEnancerQty" Text="{Binding ItemForm.RangeEnhancerQty, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxRange}"/>
                        </StackPanel>

                        <!-- SKILL ENHANCER QTY -->
                        <StackPanel Name="spSkillEnancerQty" Style="{StaticResource spBlocControl}">
                            <Label Name="lbSkillEnancerQty" Content="Skill Enhancer Qty :"/>
                            <TextBox Name="tbxSkillEnancerQty" Text="{Binding ItemForm.SkillEnhancerQty, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="60"/>
                            <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=tbxSkillEnancerQty}"/>
                        </StackPanel>

                    </StackPanel>

                </StackPanel>
            </StackPanel>
        </DockPanel>
    </Grid>
</UserControl>
